<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wfi="clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration"
                    xmlns:winForms="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
                    xmlns:Converters="clr-namespace:HylandMedConfig.Converters"
                    xmlns:Behaviors="clr-namespace:HylandMedConfig.Attached"
                    xmlns:fa="http://schemas.fontawesome.io/icons/"
                    xmlns:Properties="clr-namespace:HylandMedConfig.Properties"
                    xmlns:hmct="clr-namespace:HylandMedConfig.XamlControls"
                    xmlns:Controls="clr-namespace:HylandMedConfig.Controls">


    <!--<Style TargetType="{x:Type local:HylandAnimatedImage}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HylandAnimatedImage}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ProgressBar x:Name="PART_ProgressBar" Minimum="0" Maximum="100" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DownloadProgress}" VerticalAlignment="Center" Width="200" Height="8" />
                            <TextBlock Foreground="Red" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasError, Converter={Converters:BooleanToVisibilityConverter}}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ErrorMessage}" />
                            <wfi:WindowsFormsHost x:Name="PART_WindowsFormsHost" Visibility="Collapsed">
                                <winForms:PictureBox x:Name="PART_PictureBox" SizeMode="Zoom" />
                            </wfi:WindowsFormsHost>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsImageLoaded" Value="True">
                            <Setter TargetName="PART_WindowsFormsHost" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ProgressBar" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasError" Value="True">
                            <Setter TargetName="PART_WindowsFormsHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_ProgressBar" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style TargetType="{x:Type local:HylandMediaElement}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HylandMediaElement}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ProgressBar x:Name="PART_ProgressBar" Minimum="0" Maximum="100" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DownloadProgress}" VerticalAlignment="Center" Width="200" Height="8" />
                            <TextBlock Foreground="Red" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasError, Converter={Converters:BooleanToVisibilityConverter}}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ErrorMessage}" />
                            <MediaElement x:Name="PART_MediaElement" ScrubbingEnabled="True" LoadedBehavior="Manual" 
                                          Stretch="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Stretch}"
                                          Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Source}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <PathGeometry x:Key="ThumbsUpSolid"
                  Figures="M23,10C23,8.89 22.1,8 21,8H14.68L15.64,3.43C15.66,3.33 15.67,3.22 15.67,3.11C15.67,2.7 15.5,2.32 15.23,2.05L14.17,1L7.59,7.58C7.22,7.95 7,8.45 7,9V19A2,2 0 0,0 9,21H18C18.83,21 19.54,20.5 19.84,19.78L22.86,12.73C22.95,12.5 23,12.26 23,12V10.08L23,10M1,21H5V9H1V21Z">
    </PathGeometry>

    <PathGeometry x:Key="ThumbsUpEmpty"
                  Figures="M5,9V21H1V9H5M9,21A2,2 0 0,1 7,19V9C7,8.45 7.22,7.95 7.59,7.59L14.17,1L15.23,2.06C15.5,2.33 15.67,2.7 15.67,3.11L15.64,3.43L14.69,8H21C22.11,8 23,8.9 23,10V10.09L23,12C23,12.26 22.95,12.5 22.86,12.73L19.84,19.78C19.54,20.5 18.83,21 18,21H9M9,19H18.03L21,12V10H12.21L13.34,4.68L9,9.03V19Z">
    </PathGeometry>

    <PathGeometry x:Key="ThumbsDownEmpty"
                  Figures="M19,15V3H23V15H19M15,3A2,2 0 0,1 17,5V15C17,15.55 16.78,16.05 16.41,16.41L9.83,23L8.77,21.94C8.5,21.67 8.33,21.3 8.33,20.88L8.36,20.57L9.31,16H3C1.89,16 1,15.1 1,14V13.91L1,12C1,11.74 1.05,11.5 1.14,11.27L4.16,4.22C4.46,3.5 5.17,3 6,3H15M15,5H5.97L3,12V14H11.78L10.65,19.32L15,14.97V5Z">
    </PathGeometry>

    <PathGeometry x:Key="ThumbsDownSolid"
                  Figures="M19,15H23V3H19M15,3H6C5.17,3 4.46,3.5 4.16,4.22L1.14,11.27C1.05,11.5 1,11.74 1,12V13.91L1,14A2,2 0 0,0 3,16H9.31L8.36,20.57C8.34,20.67 8.33,20.77 8.33,20.88C8.33,21.3 8.5,21.67 8.77,21.94L9.83,23L16.41,16.41C16.78,16.05 17,15.55 17,15V5C17,3.89 16.1,3 15,3Z" />

    <PathGeometry x:Key="WhiteboardLocked"
                  Figures="M 22.17,36.4216L 25.3369,36.4216L 25.3369,31.6711C 25.3369,24.6745 31.0087,19.0027 38.0053,19.0027C 45.0019,19.0027 50.6737,24.6745 50.6737,31.6711L 50.6737,36.4216L 53.841,36.4216L 53.8411,57.008L 22.17,57.008L 22.17,36.4216 Z M 45.9231,31.6711C 45.9231,27.2982 42.3782,23.7533 38.0053,23.7533C 33.6324,23.7533 30.0875,27.2982 30.0875,31.6711L 30.0875,36.4216L 45.923,36.4216L 45.9231,31.6711 Z" />

    <PathGeometry x:Key="WhiteboardUnlocked"
                  Figures="M 22.1698,36.4215L 25.3366,36.4215L 25.3367,31.6711C 25.3367,24.6745 31.0085,19.0027 38.0051,19.0027C 45.0017,19.0027 50.6735,24.6745 50.6735,31.6711L 45.9228,31.6711C 45.9228,27.2982 42.3779,23.7533 38.0051,23.7533C 33.6322,23.7533 30.0873,27.2982 30.0873,31.6711L 30.0873,36.4216L 53.8408,36.4215L 53.8409,57.008L 22.1698,57.008L 22.1698,36.4215 Z " />

    <PathGeometry x:Key="TagPathGeometry"
                  Figures="M 24.5416,19L 33.25,19L 55.4167,41.1667C 56.6533,42.4033 56.6533,44.4083 55.4167,45.645L 45.645,55.4167C 44.4084,56.6533 42.4033,56.6533 41.1667,55.4167L 19,33.25L 19,24.5417C 19,22.6945 19,20.8472 19.9236,19.9236C 20.8472,19 22.6944,19 24.5416,19 Z M 26.9167,23.75C 25.1678,23.75 23.75,25.1678 23.75,26.9167C 23.75,28.6656 25.1678,30.0833 26.9167,30.0833C 28.6656,30.0833 30.0833,28.6656 30.0833,26.9167C 30.0833,25.1678 28.6656,23.75 26.9167,23.75 Z" />

    <Style TargetType="{x:Type hmct:HyperlinkTextBlock}">
        <Setter Property="TextDecorations" Value="Underline" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="ToolTip" Value="{Binding UriSource.AbsoluteUri, RelativeSource={RelativeSource Self}}" />
        <Setter Property="FontFamily" Value="{Binding FontFamily, Source={x:Static Properties:Settings.Default}}" />
        <Setter Property="FontSize" Value="{Binding FontSize, Source={x:Static Properties:Settings.Default}}" />
        <Setter Property="FontStyle" Value="{Binding FontStyle, Source={x:Static Properties:Settings.Default}}" />
        <Setter Property="FontWeight" Value="{Binding FontWeight, Source={x:Static Properties:Settings.Default}}" />
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Controls:ChatMessageCallout}}" />
    </Style>

    <Style TargetType="{x:Type hmct:HyperlinkRun}">
        <Setter Property="TextDecorations" Value="Underline" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style TargetType="{x:Type Controls:ThumbsUp}">
        <Setter Property="MaxHeight"
                Value="24" />
        <Setter Property="MaxWidth"
                Value="24" />
        <Setter Property="ToolTip"
                Value="I like this" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:ThumbsUp}">
                    <Grid Background="Transparent"
                          Cursor="Hand">
                        <Path Fill="{TemplateBinding Foreground}"
                              StrokeThickness="0"
                              Stretch="Fill"
                              x:Name="path"
                              Data="{StaticResource ThumbsUpEmpty}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="path"
                                    Property="Data"
                                    Value="{StaticResource ThumbsUpSolid}" />
                            <Setter Property="ToolTip"
                                    Value="Unlike" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Opacity"
                                    Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Opacity"
                                    Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:ThumbsDown}">
        <Setter Property="ToolTip"
                Value="I dislike this" />
        <Setter Property="MaxHeight"
                Value="24" />
        <Setter Property="MaxWidth"
                Value="24" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:ThumbsDown}">
                    <Grid Background="Transparent"
                          Cursor="Hand">
                        <Path Fill="{TemplateBinding Foreground}"
                              StrokeThickness="0"
                              Stretch="Fill"
                              x:Name="path"
                              Data="{StaticResource ThumbsDownEmpty}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="path"
                                    Property="Data"
                                    Value="{StaticResource ThumbsDownSolid}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Opacity"
                                    Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Opacity"
                                    Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:TagListButton}">
        <Setter Property="ToolTip"
                Value="Click to respond to all tags from this message." />
        <Setter Property="MaxHeight"
                Value="24" />
        <Setter Property="MaxWidth"
                Value="24" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:TagListButton}">
                    <Grid Background="Transparent"
                          Cursor="Hand">
                        <Path Fill="{TemplateBinding Foreground}"
                              StrokeThickness="0"
                              Stretch="Fill"
                              x:Name="path"
                              Data="{StaticResource TagPathGeometry}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Opacity"
                                    Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Opacity"
                                    Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:LockButton}">
        <Setter Property="ToolTip"
                Value="Lock this whiteboard" />
        <Setter Property="Width"
                Value="14" />
        <Setter Property="ToolTipService.ShowOnDisabled"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:LockButton}">
                    <Grid Cursor="Hand">
                        <Path Fill="{TemplateBinding Foreground}"
                              StrokeThickness="0"
                              Margin="{TemplateBinding Padding}"
                              Stretch="Uniform"
                              x:Name="path"
                              Data="{StaticResource WhiteboardUnlocked}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsLocked"
                                 Value="True">
                            <Setter TargetName="path"
                                    Property="Data"
                                    Value="{StaticResource WhiteboardLocked}" />
                            <Setter Property="ToolTip"
                                    Value="Unlock this Whiteboard" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="False" />
                                <Condition Property="IsLocked"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ToolTip"
                                    Value="This Whiteboard is not locked" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="False" />
                                <Condition Property="IsLocked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ToolTip"
                                    Value="This Whiteboard is locked" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Opacity"
                                    Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Opacity"
                                    Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls:ZoomControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:ZoomControl}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                ClipToBounds="{TemplateBinding ClipContent}">
                            <ContentPresenter x:Name="PART_Presenter"
                                              ClipToBounds="False" />
                        </Border>
                        <Canvas>

                            <!-- Controls -->
                            <Border Padding="5"
                                    Cursor="ScrollAll"
                                    Canvas.Left="{TemplateBinding ZoomControlCanvasLeft}"
                                    Visibility="{TemplateBinding ZoomControlVisibility}"
                                    Background="{TemplateBinding ZoomBoxBackground}"
                                    BorderBrush="{TemplateBinding ZoomBoxBorderBrush}"
                                    BorderThickness="{TemplateBinding ZoomBoxBorderThickness}"
                                    TextElement.Foreground="{TemplateBinding ZoomBoxBorderBrush}"
                                    Canvas.Top="5"
                                    ToolTipService.InitialShowDelay="0">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Behaviors:DragBehaviour.IsDragEnabled"
                                                Value="True" />
                                        <Setter Property="Behaviors:DragBehaviour.X"
                                                Value="{Binding RelativeSource={RelativeSource Self},Path=(Canvas.Left)}" />
                                        <Setter Property="Behaviors:DragBehaviour.Y"
                                                Value="{Binding RelativeSource={RelativeSource Self},Path=(Canvas.Top)}" />
                                    </Style>
                                </Border.Style>
                                <Border.ToolTip>
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock><Run FontWeight="Bold">CTRL + Wheel:</Run> Zoom In / Out</TextBlock>
                                        <TextBlock><Run FontWeight="Bold">ALT + Drag:</Run> ZoomBox</TextBlock>
                                        <TextBlock><Run FontWeight="Bold">(SHIFT +) Drag:</Run> Pan</TextBlock>
                                        <TextBlock><Run FontWeight="Bold">CTRL + Middle Wheel:</Run> Reset</TextBlock>
                                    </StackPanel>
                                </Border.ToolTip>
                                <StackPanel Orientation="Vertical">

                                    <Slider Height="150"
                                            Minimum="{TemplateBinding MinZoom,Converter={Converters:DoubleToLog10Converter}}"
                                            Maximum="{TemplateBinding MaxZoom,Converter={Converters:DoubleToLog10Converter}}"
                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Zoom,Mode=TwoWay,Converter={Converters:DoubleToLog10Converter}}"
                                            HorizontalAlignment="Center"
                                            Ticks="0.1, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 2"
                                            AutoToolTipPlacement="BottomRight"
                                            AutoToolTipPrecision="1"
                                            TickPlacement="BottomRight"
                                            TickFrequency="1"
                                            Cursor="Arrow"
                                            LargeChange="1"
                                            SmallChange="0.1"
                                            Orientation="Vertical" />
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Zoom,StringFormat='{}{0:F2}x'}"
                                               HorizontalAlignment="Center"
                                               FontWeight="Bold" />
                                    <Button Content="1x"
                                            Cursor="Hand"
                                            Command="{x:Static Controls:ZoomControl.ResetCommand}" />
                                </StackPanel>
                            </Border>

                            <!-- ZoomBox -->
                            <Border BorderBrush="{TemplateBinding ZoomBoxBorderBrush}"
                                    BorderThickness="{TemplateBinding ZoomBoxBorderThickness}"
                                    Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.X}"
                                    Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.Y}"
                                    Opacity="{TemplateBinding ZoomBoxOpacity}"
                                    Background="{TemplateBinding ZoomBoxBackground}"
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.Width}"
                                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.Height}" />
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
</ResourceDictionary>
