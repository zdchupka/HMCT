<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Commands="clr-namespace:HylandMedConfig.Commands"
                    xmlns:Converters="clr-namespace:HylandMedConfig.Converters"
                    xmlns:Common="clr-namespace:HylandMedConfig.Common;assembly=HylandMedConfig.Bot"
                    xmlns:attached="clr-namespace:HylandMedConfig.Attached"
                    xmlns:Properties="clr-namespace:HylandMedConfig.Properties"
                    xmlns:local="clr-namespace:HylandMedConfig"
                    xmlns:Controls="clr-namespace:HylandMedConfig.Controls">

    <Style TargetType="{x:Type Controls:MessageBubble}">
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Play Message"
                              Command="{Binding PlayMessage, Source={x:Static local:ApplicationViewModel.Current}}"
                              CommandParameter="{Binding}" />

                    <MenuItem Header="Copy Message"
                              Command="{Binding CopyMessageTextCommand, Source={x:Static local:ApplicationViewModel.Current}}"
                              CommandParameter="{Binding}" />

                    <Separator />

                    <MenuItem Header="Remove Message"
                              Command="{Binding RemoveMessageCommand, Source={x:Static local:ApplicationViewModel.Current}}"
                              CommandParameter="{Binding}" />

                    <Separator />

                    <MenuItem Header="Remove Messages Before This"
                              Command="{Binding RemoveMessagesBeforeCommand, Source={x:Static local:ApplicationViewModel.Current}}"
                              CommandParameter="{Binding}" />

                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:MessageBubble}">
                    <DockPanel Margin="5">

                        <Controls:ChatUserImage User="{Binding Message.FromUser, RelativeSource={RelativeSource TemplatedParent}}"
                                                x:Name="userImage"
                                                VerticalAlignment="Top"
                                                Visibility="{Binding Message.FromUser, RelativeSource={RelativeSource TemplatedParent}, Converter={Converters:IsCurrentUserVisibilityConverter}, ConverterParameter=NOT}"
                                                DockPanel.Dock="Left" />

                        <Controls:ContentHighlighter x:Name="statusBorder"
                                                     HorizontalAlignment="Left"
                                                     Margin="9 1"
                                                     DockPanel.Dock="Bottom">
                            <ContentControl x:Name="statusMessage"
                                            TextElement.FontFamily="{Binding SystemFontFamily, Source={x:Static Properties:Settings.Default}}"
                                            TextElement.FontSize="{Binding SystemFontSize, Source={x:Static Properties:Settings.Default}}"
                                            TextElement.FontWeight="{Binding SystemFontWeight, Source={x:Static Properties:Settings.Default}}"
                                            TextElement.FontStyle="{Binding SystemFontStyle, Source={x:Static Properties:Settings.Default}}"
                                            TextElement.Foreground="{Binding SystemForegroundResolvedBrush, Source={x:Static Properties:Settings.Default}}"
                                            Content="{Binding Message, RelativeSource={RelativeSource TemplatedParent}, Converter={Converters:ChatMessageBubbleStatusTextConverter}}" />
                        </Controls:ContentHighlighter>

                        <Controls:ChatMessageCallout x:Name="textBubble"
                                                     Padding="0"
                                                     HorizontalAlignment="Left">

                            <Controls:ChatMessageCallout.Style>
                                <Style BasedOn="{StaticResource {x:Type Controls:ChatMessageCallout}}"
                                       TargetType="{x:Type Controls:ChatMessageCallout}">
                                    <Setter Property="BorderThickness"
                                            Value="1" />
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource ChatMessageCalloutBorderBrush}" />
                                    <Setter Property="Background"
                                            Value="{Binding MessageBackgroundResolvedBrush, Source={x:Static Properties:Settings.Default}}" />
                                    <Setter Property="Foreground"
                                            Value="{Binding MessageForegroundResolvedBrush, Source={x:Static Properties:Settings.Default}}" />
                                    <Setter Property="BorderBrush"
                                            Value="{Binding MessageBorderResolvedBrush, Source={x:Static Properties:Settings.Default}}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ShowMessageBorder, Source={x:Static Properties:Settings.Default}}"
                                                     Value="False">
                                            <Setter Property="BorderThickness"
                                                    Value="0" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ShowMessageDropShadow, Source={x:Static Properties:Settings.Default}}"
                                                     Value="True">
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <DropShadowEffect BlurRadius="{Binding DropShadowBlurRadius, Source={x:Static Properties:Settings.Default}}"
                                                                      ShadowDepth="{Binding DropShadowShadowDepth, Source={x:Static Properties:Settings.Default}}"
                                                                      Color="{Binding DropShadowColor, Source={x:Static Properties:Settings.Default}}"
                                                                      Direction="{Binding DropShadowDirection, Source={x:Static Properties:Settings.Default}}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Message.ToUsers.Count, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Value="1">
                                            <Setter Property="Background"
                                                    Value="{Binding WhisperMessageBackgroundResolvedBrush, Source={x:Static Properties:Settings.Default}}" />
                                            <Setter Property="Foreground"
                                                    Value="{Binding WhisperMessageForegroundResolvedBrush, Source={x:Static Properties:Settings.Default}}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Message.ToUsers.Count, RelativeSource={RelativeSource TemplatedParent}, Converter={Converters:IsGreaterThanConverter}, ConverterParameter=1}"
                                                     Value="True">
                                            <Setter Property="Background"
                                                    Value="{Binding GroupMessageBackgroundResolvedBrush, Source={x:Static Properties:Settings.Default}}" />
                                            <Setter Property="Foreground"
                                                    Value="{Binding GroupMessageForegroundResolvedBrush, Source={x:Static Properties:Settings.Default}}" />
                                        </DataTrigger>
                                        <DataTrigger
                                                Binding="{Binding Message.Tags, RelativeSource={RelativeSource TemplatedParent}, Converter={Converters:ListHasItemsConverter}}"
                                                Value="True">
                                            <Setter Property="Background"
                                                    Value="{Binding Tags, Converter={Converters:TagBackgroundBrushConverter}}" />
                                            <Setter Property="Foreground"
                                                    Value="{Binding Tags, Converter={Converters:TagForegroundBrushConverter}}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Controls:ChatMessageCallout.Style>

                            <Grid>
                                <ContentPresenter x:Name="PART_Presenter" 
                                                  VerticalAlignment="Center">
                                    <ContentPresenter.Style>
                                        <Style TargetType="ContentPresenter">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsHidden}" Value="True">
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentPresenter.Style>
                                </ContentPresenter>

                                <Border Visibility="{Binding IsHidden, Converter={Converters:BooleanToVisibilityConverter}}">

                                    <Button Content="{Binding Converter={Converters:TagsToUnsafeTagsConverter}}" 
                                                Margin="10"
                                                HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                                ToolTip="This message is hidden.  Click to show message."
                                               Padding="9 5"
                                                Command="{Binding ShowTaggedMessageCommand, Source={x:Static local:ApplicationViewModel.Current}}"
                                                CommandParameter="{Binding}"/>

                                </Border>

                                <!-- Close button -->
                                <Button Background="{Binding ElementName=textBubble, Path=Background}"
                                        Style="{DynamicResource RemoveMessageButtonStyle}"
                                        Margin="1"
                                        Visibility="Collapsed"
                                        x:Name="closeButton"
                                        HorizontalAlignment="Right"
                                        Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Controls:ChatMessageCallout}}"
                                        VerticalAlignment="Top"
                                        Command="{Binding RemoveMessageCommand, Source={x:Static local:ApplicationViewModel.Current}}"
                                        CommandParameter="{Binding Message, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>



                        </Controls:ChatMessageCallout>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Message.FromUser, RelativeSource={RelativeSource Self}, Converter={Converters:IsCurrentUserConverter}}"
                                     Value="True">
                            <Setter TargetName="userImage"
                                    Property="DockPanel.Dock"
                                    Value="Right" />
                            <Setter TargetName="statusMessage"
                                    Property="HorizontalAlignment"
                                    Value="Right" />
                            <Setter TargetName="statusBorder"
                                    Property="HorizontalAlignment"
                                    Value="Right" />
                            <Setter TargetName="textBubble"
                                    Property="HorizontalAlignment"
                                    Value="Right" />
                        </DataTrigger>
                        <Trigger Property="HorizontalContentAlignment"
                                 Value="Center">
                            <Setter TargetName="statusBorder"
                                    Property="HorizontalAlignment"
                                    Value="Center" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="closeButton"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>